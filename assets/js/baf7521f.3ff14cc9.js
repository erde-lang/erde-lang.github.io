"use strict";(self.webpackChunkerde_lang_github_io=self.webpackChunkerde_lang_github_io||[]).push([[723],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,g=u["".concat(c,".").concat(m)]||u[m]||s[m]||l;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8318:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const l={},i="Getting Started",o={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Installation",source:"@site/src/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/getting-started",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/"},next:{title:"Reference",permalink:"/reference"}},c={},d=[{value:"Installation",id:"installation",level:2},{value:"Erde CLI",id:"erde-cli",level:2},{value:"Running Programs",id:"running-programs",level:3},{value:"Compiling Programs",id:"compiling-programs",level:3},{value:"Cleaning Projects",id:"cleaning-projects",level:3},{value:"Erde Package Loader",id:"erde-package-loader",level:2}],p={toc:d};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"The recommended way to install is through ",(0,r.kt)("a",{parentName:"p",href:"https://luarocks.org/modules/bsuth/erde"},"luarocks"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"luarocks install erde\n")),(0,r.kt)("p",null,"Alternatively you can clone this repo and update your\n",(0,r.kt)("a",{parentName:"p",href:"https://www.lua.org/pil/8.1.html"},"LUA_PATH")," accordingly:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'git clone https://github.com/erde-lang/erde.git\nERDE_ROOT="$(pwd)/erde"\nexport LUA_PATH="$ERDE_ROOT/?.lua;$ERDE_ROOT/?/init.lua;$LUA_PATH"\n\n# To use the CLI:\nalias erde="lua $ERDE_ROOT/cli/init.lua"\n')),(0,r.kt)("p",null,"You can check whether Erde is installed correctly by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"erde -h\n")),(0,r.kt)("h2",{id:"erde-cli"},"Erde CLI"),(0,r.kt)("h3",{id:"running-programs"},"Running Programs"),(0,r.kt)("p",null,"Create an Erde file, which uses the ",(0,r.kt)("inlineCode",{parentName:"p"},".erde")," extension:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"touch fibonacci.erde\n")),(0,r.kt)("p",null,"And add some code to it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-erde"},"function fibonacci(n) {\n  local a, b = 0, 1\n\n  for i = 1, n {\n    a, b = b, a + b\n    print(b)\n  }\n}\n\nfibonacci(10)\n")),(0,r.kt)("p",null,"We can then run the file from the command line using the ",(0,r.kt)("inlineCode",{parentName:"p"},"erde")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"erde fibonacci.erde\n")),(0,r.kt)("h3",{id:"compiling-programs"},"Compiling Programs"),(0,r.kt)("p",null,"Running Erde files directly is great for development, but for production code\nwe generally want to distribute Lua files instead. We can compile our\nprevious file into Lua using the ",(0,r.kt)("inlineCode",{parentName:"p"},"erde compile")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"erde compile fibonacci.erde\n")),(0,r.kt)("p",null,"This will create a ",(0,r.kt)("inlineCode",{parentName:"p"},"fibonacci.lua")," file in the same directory."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can run the compiled file with the ",(0,r.kt)("inlineCode",{parentName:"p"},"lua")," interpreter as a sanity check to\nmake sure the output is the same:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"lua fibonacci.lua\n"))),(0,r.kt)("h3",{id:"cleaning-projects"},"Cleaning Projects"),(0,r.kt)("p",null,"By default, Lua files are generated next to their Erde counterparts in order to\nensure ",(0,r.kt)("inlineCode",{parentName:"p"},"require")," resolutions are consistent. While this is great for\ndistribution, it clutters the directory and can feel somewhat noisy during\ndevelopment."),(0,r.kt)("p",null,"Erde keeps track of which files it has generated by injecting a special comment\nat the end of the file. This allows us to be able to clean all generated files\nusing:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"erde clean .\n")),(0,r.kt)("p",null,"This will recursively clean all generated files under the current directory."),(0,r.kt)("h2",{id:"erde-package-loader"},"Erde Package Loader"),(0,r.kt)("p",null,"Most of the time, you will want to load Erde files directly from Lua scripts to\navoid having to constantly recompile your code. To achieve this, Erde ships with\na custom ",(0,r.kt)("a",{parentName:"p",href:"https://www.lua.org/manual/5.1/manual.html#pdf-package.loaders"},"package loader"),"\nthat can be injected and configured from Lua:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"require('erde').load()\n\n-- You can also specify the Lua target manually. By default, this is inferred\n-- from the current Lua version (`_VERSION`)\nrequire('erde').load('5.1+')\n")),(0,r.kt)("p",null,"Now we can use ",(0,r.kt)("inlineCode",{parentName:"p"},"require")," to load any Erde files in our ",(0,r.kt)("inlineCode",{parentName:"p"},"package.path"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-erde",metastring:"title=my-erde-module.erde",title:"my-erde-module.erde"},"local name = 'world'\nprint(\"hello {name}!\")\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title=my-lua-module.lua",title:"my-lua-module.lua"},"require('erde').load()\nrequire('my-erde-module') -- hello world!\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Erde injects its package loader ",(0,r.kt)("em",{parentName:"p"},"before")," the default Lua package loader, which\nmeans that modules with the same name will prefer Erde files over Lua files.\nThis prevents (potentially outdated) compiled files from taking priority.")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"When Erde injects its package loader, it also replaces the native\n",(0,r.kt)("inlineCode",{parentName:"p"},"debug.traceback")," function with one that handles ",(0,r.kt)("a",{parentName:"p",href:"/error-handling"},"error rewriting"),".\nThe native ",(0,r.kt)("inlineCode",{parentName:"p"},"debug.traceback")," is restored when calling ",(0,r.kt)("inlineCode",{parentName:"p"},"require('erde').unload()"),".\nThis behavior can be prevented using the ",(0,r.kt)("a",{parentName:"p",href:"/api#erdeload"},"load options"),".")))}s.isMDXComponent=!0}}]);