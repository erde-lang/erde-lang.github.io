"use strict";(self.webpackChunkerde_lang_github_io=self.webpackChunkerde_lang_github_io||[]).push([[963],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return d}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),u=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},p=function(e){var n=u(e.components);return t.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,f=m["".concat(c,".").concat(d)]||m[d]||s[d]||l;return r?t.createElement(f,o(o({ref:n},p),{},{components:r})):t.createElement(f,o({ref:n},p))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=r[u];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},814:function(e,n,r){r.r(n),r.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return s}});var t=r(7462),a=r(3366),l=(r(7294),r(3905)),o=["components"],i={},c="Examples",u={unversionedId:"examples",id:"examples",title:"Examples",description:"Arrow Functions",source:"@site/src/docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/examples",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Breaking Changes w/ Lua",permalink:"/breaking-changes-lua"},next:{title:"Reference",permalink:"/reference"}},p={},s=[{value:"Arrow Functions",id:"arrow-functions",level:2},{value:"Destructuring",id:"destructuring",level:2},{value:"Assignment Operators",id:"assignment-operators",level:2},{value:"Parameter Defaults",id:"parameter-defaults",level:2},{value:"Continue",id:"continue",level:2},{value:"String Interpolation",id:"string-interpolation",level:2},{value:"Try Catch",id:"try-catch",level:2}],m={toc:s};function d(e){var n=e.components,r=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"examples"},"Examples"),(0,l.kt)("h2",{id:"arrow-functions"},"Arrow Functions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-erde"},"function map(t, callback) {\n  local copy = {}\n\n  for key, value in pairs(t) {\n    copy[key] = callback(value)\n  }\n\n  return copy\n}\n\nlocal evens = { 2, 4, 6, 8, 10 }\n\nlocal odds = map(evens, even -> {\n  return even - 1\n})\n\n-- OR with implicit return shorthand\nlocal odds = map(evens, even -> even - 1)\n")),(0,l.kt)("h2",{id:"destructuring"},"Destructuring"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-erde"},"local myTable = {\n  myValue = 5,\n  'child1',\n  'child2',\n}\n\n-- Map destruct\nlocal { myValue } = myTable\n\n-- Array destruct\nlocal [ firstChild, secondChild ] = myTable\n")),(0,l.kt)("h2",{id:"assignment-operators"},"Assignment Operators"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-erde"},"local a = 1\nprint(a)\na += 1\nprint(a)\na *= 5\nprint(a)\n")),(0,l.kt)("h2",{id:"parameter-defaults"},"Parameter Defaults"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-erde"},"function greet(message = 'hello world') {\n  print(message)\n}\n\ngreet()\ngreet('goodbye world')\n")),(0,l.kt)("h2",{id:"continue"},"Continue"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-erde"},"function printOdds(...) {\n  for _, value in ipairs({ ... }) {\n    if value % 2 == 0 {\n      continue\n    }\n\n    print(value)\n  }\n}\n\nprintOdds(1, 2, 3, 4, 5)\n")),(0,l.kt)("h2",{id:"string-interpolation"},"String Interpolation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-erde"},"local myValue = 4\n\n-- Can interpolate any string\nprint('myValue is {myValue}')\nprint(\"myValue is {myValue}\")\nprint([[myValue is {myValue}]])\n\n-- Can escape braces for literal print\nprint('A literal brace: \\\\{')\n")),(0,l.kt)("h2",{id:"try-catch"},"Try Catch"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-erde"},"try {\n  print(1 / \"hello\")\n} catch (err) {\n  print('Caught: ', err)\n}\n")))}d.isMDXComponent=!0}}]);